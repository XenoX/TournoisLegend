imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }
    - { resource: "@AdminBundle/Resources/config/services.yml" }
    - { resource: "@TournamentBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    website:
        name:          Tournois-Legend
        email:         contact@tournois-legend.com
        noreply_email: noreply@tournois-legend.com
    social:
        discord:  https://discord.gg/BDmVjFT
        twitter:  https://twitter.com/TournoisLegend
        facebook: https://facebook.com/TournoisLegend
    role_name:
        ROLE_USER:       role.user
        ROLE_VIP:        role.vip
        ROLE_STREAMER:   role.streamer
        ROLE_TOURNAMENT: role.tournament
        ROLE_MODO:       role.moderator
        ROLE_ADMIN:      role.administrator
        ROLE_KAIO:       role.kaio

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    workflows:
        tournament:
            type: state_machine
            marking_store:
                type: single_state
                arguments: state
            supports:
                - TournamentBundle\Entity\Tournament
            places:
                - init
                - registration
                - check_in
                - match
                - done
            transitions:
                registration:
                    from: init
                    to:   registration
                check_in:
                    from: registration
                    to:   check_in
                match:
                    from: check_in
                    to:   match
                done:
                    from: match
                    to:   done
        participant:
            type: state_machine
            marking_store:
                type: single_state
                arguments: state
            supports:
                - TournamentBundle\Entity\Participant
            places:
                - registered
                - confirmed
                - checked_in
            transitions:
                confirm:
                    from: registered
                    to:   confirmed
                check_in:
                    from: confirmed
                    to:   checked_in
        lan_participant:
            type: state_machine
            marking_store:
                type: single_state
                arguments: state
            supports:
                - TournamentBundle\Entity\LanParticipant
            places:
                - registered
                - confirmed
            transitions:
                confirm:
                    from: registered
                    to:   confirmed
        stream:
            type: state_machine
            marking_store:
                type: single_state
                arguments: state
            supports:
                - TournamentBundle\Entity\Stream
            places:
                - requested
                - accepted
                - refused
            transitions:
                accept:
                    from: [requested, refused]
                    to:   accepted
                refuse:
                    from: [requested, accepted]
                    to:   refused

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        social: "%social%"
    form_themes:
        - 'bootstrap_3_layout.html.twig'
        - 'Form/form_errors.html.twig'
        - 'Form/form_row.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            datetime_functions:
                week: DoctrineExtensions\Query\Mysql\Week
                dayofyear: DoctrineExtensions\Query\Mysql\DayOfYear
                month: DoctrineExtensions\Query\Mysql\Month
                year: DoctrineExtensions\Query\Mysql\Year

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        jsqueeze: ~
        cssrewrite: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
#    host:      "%mailer_host%"
#    username:  "%mailer_user%"
#    password:  "%mailer_password%"
#    spool:     { type: memory }

mailjet:
    api_key:    "%mailjet.api_key%"
    secret_key: "%mailjet.secret_key%"

ewz_recaptcha:
    public_key:  thisKeyNoLongerExists
    private_key: thisKeyNoLongerExists
    locale_key:  "%kernel.default_locale%"
    enabled: true

gregwar_image:
    fallback_image: /web/static/img/default.png

knp_paginator:
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig

lexik_maintenance:
    driver:
         # File driver
        class: '\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver'
        options: {file_path: "%kernel.root_dir%/../var/cache/lock"}
    response:
        code: 503                                                                  # Http response code of Exception page
        status: "Service Temporarily Unavailable"                                  # Exception page title
        exception_message: "Service Temporarily Unavailable"                       # Message when Exception is thrown
